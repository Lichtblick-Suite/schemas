// Generated by https://github.com/foxglove/schemas

import { ArrowMarker } from "./ArrowMarker";
import { ConeMarker } from "./ConeMarker";
import { CubeMarker } from "./CubeMarker";
import { Duration } from "./Duration";
import { KeyValuePair } from "./KeyValuePair";
import { LineMarker } from "./LineMarker";
import { ModelMarker } from "./ModelMarker";
import { SphereMarker } from "./SphereMarker";
import { TextMarker } from "./TextMarker";
import { Time } from "./Time";
import { TriangleListMarker } from "./TriangleListMarker";

/** A visual element in a 3D scene */
export type SceneEntity = {
  /** Timestamp of the marker */
  timestamp: Time;

  /** Frame of reference */
  frame_id: string;

  /** Identifier for the marker. A marker will replace any prior marker on the same topic with the same `id`. */
  id: string;

  /** Length of time (relative to `timestamp`) after which the marker should be automatically removed. Zero value indicates the marker should remain visible until it is replaced or deleted. */
  lifetime: Duration;

  /** Whether the marker should keep its location in the fixed frame (false) or follow the frame specified in `frame_id` as it moves relative to the fixed frame (true) */
  frame_locked: boolean;

  /** Additional user-provided metadata associated with the marker. Keys must be unique. */
  metadata: KeyValuePair[];

  /** Arrow markers */
  arrows: ArrowMarker[];

  /** Cube list markers */
  cubes: CubeMarker[];

  /** Sphere list markers */
  spheres: SphereMarker[];

  /** Cone list markers */
  cones: ConeMarker[];

  /** Line markers */
  lines: LineMarker[];

  /** Triangle list markers */
  triangles: TriangleListMarker[];

  /** Text markers */
  texts: TextMarker[];

  /** Model markers */
  models: ModelMarker[];
};
